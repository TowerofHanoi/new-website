---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props;

// Resolve image to an absolute URL for meta tags. If `image` is already
// an http(s) URL leave it unchanged. If it starts with `/` and `Astro.site`
// is configured, build a full URL using the site origin. Otherwise fall back
// to the provided value.
let imageURL = image;
try {
	if (!/^https?:\/\//i.test(String(image))) {
		if (Astro.site) {
			imageURL = new URL(String(image), Astro.site).toString();
		} else if (typeof image === 'string' && image.startsWith('/')) {
			// Astro.site isn't configured; keep the leading-slash path so it's still
			// correct for relative use, but note it won't be an absolute URL.
			imageURL = image;
		}
	}
} catch (err) {
	// If URL construction fails for any reason, fall back to the raw image.
	imageURL = image;
}

---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon-dark.svg" media="(prefers-color-scheme: light)"/>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" media="(prefers-color-scheme: dark)"/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageURL} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageURL} />
